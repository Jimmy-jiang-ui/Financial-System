{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'StockDisplay',\n  data() {\n    return {\n      stockData: [],\n      loading: true,\n      error: null,\n      // 东方财富API代码映射\n      symbolsMap: {\n        '000001': '上证指数',\n        '399001': '深证成指',\n        '399006': '创业板指',\n        '000905': '中证500'\n      }\n    };\n  },\n  mounted() {\n    this.fetchStockData();\n    // 每30秒刷新一次数据\n    this.interval = setInterval(() => {\n      this.fetchStockData();\n    }, 30000);\n  },\n  beforeDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  },\n  methods: {\n    // 替换fetchStockData方法\n    async fetchStockData() {\n      this.loading = true;\n      this.error = null;\n      try {\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\n        const apiUrl = 'https://query1.finance.yahoo.com/v7/finance/quote';\n        const symbols = ['000001.SS', '399001.SZ', '399006.SZ', '000905.SS'];\n        const response = await axios.get(`${proxyUrl}${apiUrl}`, {\n          params: {\n            symbols: symbols.join(',')\n          }\n        });\n        if (!response.data.quoteResponse || !response.data.quoteResponse.result) {\n          throw new Error('API返回数据格式不正确');\n        }\n        const results = response.data.quoteResponse.result;\n        this.stockData = results.map(stock => {\n          return {\n            name: this.symbolsMap[stock.symbol] || stock.symbol,\n            price: stock.regularMarketPrice.toFixed(2),\n            change: stock.regularMarketChange.toFixed(2),\n            changePercent: stock.regularMarketChangePercent.toFixed(2)\n          };\n        });\n      } catch (error) {\n        console.error('获取股票数据失败:', error);\n        this.error = '获取股票数据失败，请稍后重试';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","stockData","loading","error","symbolsMap","mounted","fetchStockData","interval","setInterval","beforeDestroy","clearInterval","methods","proxyUrl","apiUrl","symbols","response","get","params","join","quoteResponse","result","Error","results","map","stock","symbol","price","regularMarketPrice","toFixed","change","regularMarketChange","changePercent","regularMarketChangePercent","console"],"sources":["src/views/front/StockDisplay.vue"],"sourcesContent":["<template>\r\n  <div class=\"stock-display\">\r\n    <div class=\"top-border\"></div>\r\n    <div class=\"stock-data\">\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        <i class=\"fa fa-spinner fa-spin\"></i> 加载中...\r\n      </div>\r\n      <div v-else-if=\"error\" class=\"error\">\r\n        <i class=\"fa fa-exclamation-triangle\"></i> {{ error }}\r\n      </div>\r\n      <div v-else>\r\n        <div v-for=\"(item, index) in stockData\" :key=\"index\" class=\"index-item\">\r\n          <span>{{ item.name }}</span>\r\n          <span :class=\"{ 'text-red': item.change > 0, 'text-green': item.change < 0 }\">\r\n            {{ item.price }} {{ item.change > 0 ? '▲' : '▼' }}\r\n          </span>\r\n          <span :class=\"{ 'text-red': item.change > 0, 'text-green': item.change < 0 }\">\r\n            {{ item.change > 0 ? '+' : '' }}{{ item.changePercent }}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom-border\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'StockDisplay',\r\n  data() {\r\n    return {\r\n      stockData: [],\r\n      loading: true,\r\n      error: null,\r\n      // 东方财富API代码映射\r\n      symbolsMap: {\r\n        '000001': '上证指数',\r\n        '399001': '深证成指',\r\n        '399006': '创业板指',\r\n        '000905': '中证500'\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchStockData();\r\n    // 每30秒刷新一次数据\r\n    this.interval = setInterval(() => {\r\n      this.fetchStockData();\r\n    }, 30000);\r\n  },\r\n  beforeDestroy() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  },\r\n  methods: {\r\n    // 替换fetchStockData方法\r\n    async fetchStockData() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n        const apiUrl = 'https://query1.finance.yahoo.com/v7/finance/quote';\r\n\r\n        const symbols = ['000001.SS', '399001.SZ', '399006.SZ', '000905.SS'];\r\n        const response = await axios.get(`${proxyUrl}${apiUrl}`, {\r\n          params: {\r\n            symbols: symbols.join(',')\r\n          }\r\n        });\r\n\r\n        if (!response.data.quoteResponse || !response.data.quoteResponse.result) {\r\n          throw new Error('API返回数据格式不正确');\r\n        }\r\n\r\n        const results = response.data.quoteResponse.result;\r\n        this.stockData = results.map(stock => {\r\n          return {\r\n            name: this.symbolsMap[stock.symbol] || stock.symbol,\r\n            price: stock.regularMarketPrice.toFixed(2),\r\n            change: stock.regularMarketChange.toFixed(2),\r\n            changePercent: stock.regularMarketChangePercent.toFixed(2)\r\n          };\r\n        });\r\n\r\n      } catch (error) {\r\n        console.error('获取股票数据失败:', error);\r\n        this.error = '获取股票数据失败，请稍后重试';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.stock-display {\r\n  width: 100%;\r\n  margin-top: 37px;\r\n}\r\n\r\n.top-border,\r\n.bottom-border {\r\n  border-top: 2px solid black;\r\n  width: 100%;\r\n}\r\n\r\n.stock-data {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.index-item {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  font-size: large;\r\n  margin-bottom: 15px;\r\n  font-weight: bold;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n\r\n.text-red {\r\n  color: red;\r\n}\r\n\r\n.text-green {\r\n  color: green;\r\n}\r\n</style>"],"mappings":"AA2BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MACAC,KAAA;MACA;MACAC,UAAA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;IACA;IACA,KAAAC,QAAA,GAAAC,WAAA;MACA,KAAAF,cAAA;IACA;EACA;EACAG,cAAA;IACA,SAAAF,QAAA;MACAG,aAAA,MAAAH,QAAA;IACA;EACA;EACAI,OAAA;IACA;IACA,MAAAL,eAAA;MACA,KAAAJ,OAAA;MACA,KAAAC,KAAA;MAEA;QACA,MAAAS,QAAA;QACA,MAAAC,MAAA;QAEA,MAAAC,OAAA;QACA,MAAAC,QAAA,SAAAjB,KAAA,CAAAkB,GAAA,IAAAJ,QAAA,GAAAC,MAAA;UACAI,MAAA;YACAH,OAAA,EAAAA,OAAA,CAAAI,IAAA;UACA;QACA;QAEA,KAAAH,QAAA,CAAAf,IAAA,CAAAmB,aAAA,KAAAJ,QAAA,CAAAf,IAAA,CAAAmB,aAAA,CAAAC,MAAA;UACA,UAAAC,KAAA;QACA;QAEA,MAAAC,OAAA,GAAAP,QAAA,CAAAf,IAAA,CAAAmB,aAAA,CAAAC,MAAA;QACA,KAAAnB,SAAA,GAAAqB,OAAA,CAAAC,GAAA,CAAAC,KAAA;UACA;YACAzB,IAAA,OAAAK,UAAA,CAAAoB,KAAA,CAAAC,MAAA,KAAAD,KAAA,CAAAC,MAAA;YACAC,KAAA,EAAAF,KAAA,CAAAG,kBAAA,CAAAC,OAAA;YACAC,MAAA,EAAAL,KAAA,CAAAM,mBAAA,CAAAF,OAAA;YACAG,aAAA,EAAAP,KAAA,CAAAQ,0BAAA,CAAAJ,OAAA;UACA;QACA;MAEA,SAAAzB,KAAA;QACA8B,OAAA,CAAA9B,KAAA,cAAAA,KAAA;QACA,KAAAA,KAAA;MACA;QACA,KAAAD,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}