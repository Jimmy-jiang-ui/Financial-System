{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'StockDisplay',\n  data() {\n    return {\n      stockData: [],\n      loading: true,\n      error: null,\n      // 东方财富API代码映射\n      symbolsMap: {\n        '000001': '上证指数',\n        '399001': '深证成指',\n        '399006': '创业板指',\n        '000905': '中证500'\n      }\n    };\n  },\n  mounted() {\n    this.fetchStockData();\n    // 每30秒刷新一次数据\n    this.interval = setInterval(() => {\n      this.fetchStockData();\n    }, 30000);\n  },\n  beforeDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  },\n  methods: {\n    // 替换fetchStockData方法\n    // 新浪财经API请求方法\n    async fetchStockData() {\n      const symbols = ['sh000001', 'sz399001', 'sz399006', 'sh000905'];\n      const response = await axios.get(`https://hq.sinajs.cn/list=${symbols.join(',')}`);\n      const lines = response.data.split('\\n').filter(line => line.trim());\n      this.stockData = lines.map((line, index) => {\n        const [, name, price, preClose] = line.match(/^var hq_str_(\\w+)=\"([^,]+),([^,]+),([^,]+),/);\n        const change = (parseFloat(price) - parseFloat(preClose)).toFixed(2);\n        const changePercent = (change / preClose * 100).toFixed(2);\n        return {\n          name: this.indexMap[symbols[index]] || name,\n          price,\n          change: parseFloat(change),\n          changePercent: `${changePercent}%`\n        };\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","stockData","loading","error","symbolsMap","mounted","fetchStockData","interval","setInterval","beforeDestroy","clearInterval","methods","symbols","response","get","join","lines","split","filter","line","trim","map","index","price","preClose","match","change","parseFloat","toFixed","changePercent","indexMap"],"sources":["src/views/front/StockDisplay.vue"],"sourcesContent":["<template>\r\n  <div class=\"stock-display\">\r\n    <div class=\"top-border\"></div>\r\n    <div class=\"stock-data\">\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        <i class=\"fa fa-spinner fa-spin\"></i> 加载中...\r\n      </div>\r\n      <div v-else-if=\"error\" class=\"error\">\r\n        <i class=\"fa fa-exclamation-triangle\"></i> {{ error }}\r\n      </div>\r\n      <div v-else>\r\n        <div v-for=\"(item, index) in stockData\" :key=\"index\" class=\"index-item\">\r\n          <span>{{ item.name }}</span>\r\n          <span :class=\"{ 'text-red': item.change > 0, 'text-green': item.change < 0 }\">\r\n            {{ item.price }} {{ item.change > 0 ? '▲' : '▼' }}\r\n          </span>\r\n          <span :class=\"{ 'text-red': item.change > 0, 'text-green': item.change < 0 }\">\r\n            {{ item.change > 0 ? '+' : '' }}{{ item.changePercent }}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom-border\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'StockDisplay',\r\n  data() {\r\n    return {\r\n      stockData: [],\r\n      loading: true,\r\n      error: null,\r\n      // 东方财富API代码映射\r\n      symbolsMap: {\r\n        '000001': '上证指数',\r\n        '399001': '深证成指',\r\n        '399006': '创业板指',\r\n        '000905': '中证500'\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchStockData();\r\n    // 每30秒刷新一次数据\r\n    this.interval = setInterval(() => {\r\n      this.fetchStockData();\r\n    }, 30000);\r\n  },\r\n  beforeDestroy() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  },\r\n  methods: {\r\n    // 替换fetchStockData方法\r\n    // 新浪财经API请求方法\r\n    async fetchStockData() {\r\n      const symbols = ['sh000001', 'sz399001', 'sz399006', 'sh000905'];\r\n      const response = await axios.get(`https://hq.sinajs.cn/list=${symbols.join(',')}`);\r\n      const lines = response.data.split('\\n').filter(line => line.trim());\r\n\r\n      this.stockData = lines.map((line, index) => {\r\n        const [, name, price, preClose] = line.match(/^var hq_str_(\\w+)=\"([^,]+),([^,]+),([^,]+),/);\r\n        const change = (parseFloat(price) - parseFloat(preClose)).toFixed(2);\r\n        const changePercent = ((change / preClose) * 100).toFixed(2);\r\n        return {\r\n          name: this.indexMap[symbols[index]] || name,\r\n          price,\r\n          change: parseFloat(change),\r\n          changePercent: `${changePercent}%`\r\n        };\r\n      });\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.stock-display {\r\n  width: 100%;\r\n  margin-top: 37px;\r\n}\r\n\r\n.top-border,\r\n.bottom-border {\r\n  border-top: 2px solid black;\r\n  width: 100%;\r\n}\r\n\r\n.stock-data {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.index-item {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  font-size: large;\r\n  margin-bottom: 15px;\r\n  font-weight: bold;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n\r\n.text-red {\r\n  color: red;\r\n}\r\n\r\n.text-green {\r\n  color: green;\r\n}\r\n</style>"],"mappings":"AA2BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACAC,OAAA;MACAC,KAAA;MACA;MACAC,UAAA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;IACA;IACA,KAAAC,QAAA,GAAAC,WAAA;MACA,KAAAF,cAAA;IACA;EACA;EACAG,cAAA;IACA,SAAAF,QAAA;MACAG,aAAA,MAAAH,QAAA;IACA;EACA;EACAI,OAAA;IACA;IACA;IACA,MAAAL,eAAA;MACA,MAAAM,OAAA;MACA,MAAAC,QAAA,SAAAf,KAAA,CAAAgB,GAAA,8BAAAF,OAAA,CAAAG,IAAA;MACA,MAAAC,KAAA,GAAAH,QAAA,CAAAb,IAAA,CAAAiB,KAAA,OAAAC,MAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAC,IAAA;MAEA,KAAAnB,SAAA,GAAAe,KAAA,CAAAK,GAAA,EAAAF,IAAA,EAAAG,KAAA;QACA,SAAAvB,IAAA,EAAAwB,KAAA,EAAAC,QAAA,IAAAL,IAAA,CAAAM,KAAA;QACA,MAAAC,MAAA,IAAAC,UAAA,CAAAJ,KAAA,IAAAI,UAAA,CAAAH,QAAA,GAAAI,OAAA;QACA,MAAAC,aAAA,IAAAH,MAAA,GAAAF,QAAA,QAAAI,OAAA;QACA;UACA7B,IAAA,OAAA+B,QAAA,CAAAlB,OAAA,CAAAU,KAAA,MAAAvB,IAAA;UACAwB,KAAA;UACAG,MAAA,EAAAC,UAAA,CAAAD,MAAA;UACAG,aAAA,KAAAA,aAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}