{"ast":null,"code":"export default {\n  name: \"QuestionDetail\",\n  data() {\n    return {\n      id: this.$route.query.id,\n      question: {},\n      answerList: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0\n    };\n  },\n  created() {\n    this.$request.put('/news/updateCount/' + this.id).then(() => {\n      this.load();\n    });\n    this.loadAnswer(1);\n  },\n  methods: {\n    loadAnswer(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/answer/selectFrontPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          questionId: this.id\n        }\n      }).then(res => {\n        this.answerList = res.data?.list || [];\n        this.total = res.data?.total || 0;\n      });\n    },\n    load() {\n      this.$request.get('/question/selectById/' + this.id).then(res => {\n        this.question = res.data || {};\n      });\n    },\n    handleCurrentChange(pageNum) {\n      this.loadAnswer(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","id","$route","query","question","answerList","pageNum","pageSize","total","created","$request","put","then","load","loadAnswer","methods","get","params","questionId","res","list","handleCurrentChange"],"sources":["src/views/front/QuestionDetail.vue"],"sourcesContent":["<template>\r\n    <div style=\"width: 50%; margin: 10px auto\">\r\n        <div class=\"card\" style=\"margin-bottom: 10px\">\r\n            <div style=\"font-size: 24px; margin-bottom: 20px\">{{ question.title }}</div>\r\n            <div style=\"margin-bottom: 20px; color: #444; font-size: 16px\">{{ question.descr }}</div>\r\n            <div style=\"display: flex\">\r\n                <div style=\"flex: 1; color: #888\">\r\n                    <span style=\"margin-right: 20px\">发布日期：{{ question.date }}</span>\r\n                    <span>阅读量：{{ question.readCount }}</span>\r\n                </div>\r\n                <el-button type=\"primary\" icon=\"el-icon-edit\">回答问题</el-button>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card\">\r\n            <div style=\"font-size: 24px; margin-bottom: 20px\">回答列表 {{ total }}</div>\r\n            <div>\r\n                <div v-for=\"item in answerList\" :key=\"item.id\" style=\"display: flex; grid-gap: 10px; padding-bottom: 20px; border-bottom: 1px solid #ddd; margin-bottom: 20px\">\r\n                    <div style=\"color: #666; padding-top: 20px; width: 60px; cursor: pointer\"><i style=\"font-size: 20px\" class=\"el-icon-like\"></i>{{ item.likesCount || 100 }}</div>\r\n                    <div style=\"flex: 1;\">\r\n                        <div style=\"display: flex; grid-gap: 10px; margin-bottom: 10px\">\r\n                            <img :src=\"item.userAvatar\" alt=\"\" style=\"width: 50px; height: 50px; border-radius: 50%\">\r\n                            <div style=\"color: #888;\">\r\n                                <div style=\"margin-bottom: 10px\">{{ item.userName }}</div>\r\n                                <div>{{ item.time }}</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"w-e-text\">\r\n                            <div v-html=\"item.content\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div style=\"margin: 15px 0\">\r\n                <el-pagination\r\n                        background\r\n                        @current-change=\"handleCurrentChange\"\r\n                        :current-page=\"pageNum\"\r\n                        :page-sizes=\"[5, 10, 20]\"\r\n                        :page-size=\"pageSize\"\r\n                        layout=\"total, prev, pager, next\"\r\n                        :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"QuestionDetail\",\r\n    data() {\r\n        return {\r\n            id: this.$route.query.id,\r\n            question: {},\r\n            answerList: [],  // 所有的数据\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 10,  // 每页显示的个数\r\n            total: 0,\r\n        }\r\n    },\r\n    created() {\r\n        this.$request.put('/news/updateCount/' + this.id).then(() => {\r\n            this.load()\r\n        })\r\n\r\n        this.loadAnswer(1)\r\n    },\r\n    methods: {\r\n        loadAnswer(pageNum) {\r\n            if (pageNum) this.pageNum = pageNum\r\n            this.$request.get('/answer/selectFrontPage', {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    questionId: this.id\r\n                }\r\n            }).then(res => {\r\n                this.answerList = res.data?.list || []\r\n                this.total = res.data?.total || 0\r\n            })\r\n        },\r\n        load() {\r\n            this.$request.get('/question/selectById/' + this.id).then(res => {\r\n                this.question = res.data || {}\r\n            })\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            this.loadAnswer(pageNum)\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"mappings":"AAoDA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,EAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,EAAA;MACAG,QAAA;MACAC,UAAA;MAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA,CAAAC,GAAA,6BAAAV,EAAA,EAAAW,IAAA;MACA,KAAAC,IAAA;IACA;IAEA,KAAAC,UAAA;EACA;EACAC,OAAA;IACAD,WAAAR,OAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAI,QAAA,CAAAM,GAAA;QACAC,MAAA;UACAX,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAW,UAAA,OAAAjB;QACA;MACA,GAAAW,IAAA,CAAAO,GAAA;QACA,KAAAd,UAAA,GAAAc,GAAA,CAAAnB,IAAA,EAAAoB,IAAA;QACA,KAAAZ,KAAA,GAAAW,GAAA,CAAAnB,IAAA,EAAAQ,KAAA;MACA;IACA;IACAK,KAAA;MACA,KAAAH,QAAA,CAAAM,GAAA,gCAAAf,EAAA,EAAAW,IAAA,CAAAO,GAAA;QACA,KAAAf,QAAA,GAAAe,GAAA,CAAAnB,IAAA;MACA;IACA;IACAqB,oBAAAf,OAAA;MACA,KAAAQ,UAAA,CAAAR,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}