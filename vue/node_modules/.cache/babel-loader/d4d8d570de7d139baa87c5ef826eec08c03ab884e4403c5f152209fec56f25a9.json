{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'StockDisplay',\n  data() {\n    return {\n      stockData: [],\n      // 指数代码映射（secid格式：sh000001=上证，sz399001=深证，sz399006=创业板，sh000905=中证500）\n      indexMap: {\n        'sh000001': '上证指数',\n        'sz399001': '深证成指',\n        'sz399006': '创业板指',\n        'sh000905': '中证500'\n      }\n    };\n  },\n  mounted() {\n    this.fetchStockData();\n    // 每30秒刷新一次数据\n    this.interval = setInterval(() => {\n      this.fetchStockData();\n    }, 30000);\n  },\n  beforeDestroy() {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n  },\n  methods: {\n    // 替换fetchStockData方法\n    async fetchStockData() {\n      this.loading = true;\n      this.error = null;\n      try {\n        // 东方财富API支持沪深指数，代码格式为：sh000001（上证）、sz399001（深证）等\n        const symbols = ['sh000001', 'sz399001', 'sz399006', 'sh000905']; // 对应你的4个指数\n        const response = await axios.get(`https://push2.eastmoney.com/api/qt/clist/get`, {\n          params: {\n            cb: 'jQuery112403055243091774621_1683456789',\n            // 随机回调函数名（必填）\n            p: 1,\n            // 页码\n            n: 100,\n            // 每页数量\n            fltt: 2,\n            // 过滤类型\n            invt: 2,\n            // 市场类型（2=沪深A股）\n            fid: 'f3',\n            // 排序字段\n            fields: 'f1,f2,f3,f4,f5,f6',\n            // 需要的字段（价格、涨跌幅等）\n            secids: symbols.join(',') // 指数代码列表\n          }\n        });\n\n        // 解析JSONP响应（需去掉回调函数前缀）\n        const data = response.data.replace(/^jQuery\\d+_\\d+\\(/, '').replace(/\\);$/, '');\n        const parsed = JSON.parse(data);\n        if (!parsed.data || !parsed.data.diff) {\n          throw new Error('数据解析失败');\n        }\n        this.stockData = parsed.data.diff.map(item => ({\n          name: this.getIndexName(item.secid),\n          // 自定义指数名称映射\n          price: item.f2.toFixed(2),\n          // 当前价格\n          change: item.f3.toFixed(2),\n          // 涨跌额\n          changePercent: item.f4.toFixed(2) // 涨跌幅（%）\n        }));\n      } catch (error) {\n        console.error('东方财富API请求失败:', error);\n        this.error = '数据加载失败，请检查网络或重试';\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","stockData","indexMap","mounted","fetchStockData","interval","setInterval","beforeDestroy","clearInterval","methods","loading","error","symbols","response","get","params","cb","p","n","fltt","invt","fid","fields","secids","join","replace","parsed","JSON","parse","diff","Error","map","item","getIndexName","secid","price","f2","toFixed","change","f3","changePercent","f4","console"],"sources":["src/views/front/StockDisplay.vue"],"sourcesContent":["<template>\r\n  <div class=\"stock-display\">\r\n    <div class=\"top-border\"></div>\r\n    <div class=\"stock-data\">\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        <i class=\"fa fa-spinner fa-spin\"></i> 加载中...\r\n      </div>\r\n      <div v-else-if=\"error\" class=\"error\">\r\n        <i class=\"fa fa-exclamation-triangle\"></i> {{ error }}\r\n      </div>\r\n      <div v-else>\r\n        <div v-for=\"(item, index) in stockData\" :key=\"index\" class=\"index-item\">\r\n          <span>{{ item.name }}</span>\r\n          <span :class=\"{ 'text-red': item.change > 0, 'text-green': item.change < 0 }\">\r\n            {{ item.price }} {{ item.change > 0 ? '▲' : '▼' }}\r\n          </span>\r\n          <span :class=\"{ 'text-red': item.change > 0, 'text-green': item.change < 0 }\">\r\n            {{ item.change > 0 ? '+' : '' }}{{ item.changePercent }}%\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"bottom-border\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'StockDisplay',\r\n  data() {\r\n    return {\r\n      stockData: [],\r\n      // 指数代码映射（secid格式：sh000001=上证，sz399001=深证，sz399006=创业板，sh000905=中证500）\r\n      indexMap: {\r\n        'sh000001': '上证指数',\r\n        'sz399001': '深证成指',\r\n        'sz399006': '创业板指',\r\n        'sh000905': '中证500'\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchStockData();\r\n    // 每30秒刷新一次数据\r\n    this.interval = setInterval(() => {\r\n      this.fetchStockData();\r\n    }, 30000);\r\n  },\r\n  beforeDestroy() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n  },\r\n  methods: {\r\n    // 替换fetchStockData方法\r\n    async fetchStockData() {\r\n      this.loading = true;\r\n      this.error = null;\r\n\r\n      try {\r\n        // 东方财富API支持沪深指数，代码格式为：sh000001（上证）、sz399001（深证）等\r\n        const symbols = ['sh000001', 'sz399001', 'sz399006', 'sh000905']; // 对应你的4个指数\r\n        const response = await axios.get(`https://push2.eastmoney.com/api/qt/clist/get`, {\r\n          params: {\r\n            cb: 'jQuery112403055243091774621_1683456789', // 随机回调函数名（必填）\r\n            p: 1, // 页码\r\n            n: 100, // 每页数量\r\n            fltt: 2, // 过滤类型\r\n            invt: 2, // 市场类型（2=沪深A股）\r\n            fid: 'f3', // 排序字段\r\n            fields: 'f1,f2,f3,f4,f5,f6', // 需要的字段（价格、涨跌幅等）\r\n            secids: symbols.join(',') // 指数代码列表\r\n          }\r\n        });\r\n\r\n        // 解析JSONP响应（需去掉回调函数前缀）\r\n        const data = response.data.replace(/^jQuery\\d+_\\d+\\(/, '').replace(/\\);$/, '');\r\n        const parsed = JSON.parse(data);\r\n\r\n        if (!parsed.data || !parsed.data.diff) {\r\n          throw new Error('数据解析失败');\r\n        }\r\n\r\n        this.stockData = parsed.data.diff.map(item => ({\r\n          name: this.getIndexName(item.secid), // 自定义指数名称映射\r\n          price: item.f2.toFixed(2), // 当前价格\r\n          change: item.f3.toFixed(2), // 涨跌额\r\n          changePercent: item.f4.toFixed(2) // 涨跌幅（%）\r\n        }));\r\n\r\n      } catch (error) {\r\n        console.error('东方财富API请求失败:', error);\r\n        this.error = '数据加载失败，请检查网络或重试';\r\n      } finally {\r\n        this.loading = false;\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.stock-display {\r\n  width: 100%;\r\n  margin-top: 37px;\r\n}\r\n\r\n.top-border,\r\n.bottom-border {\r\n  border-top: 2px solid black;\r\n  width: 100%;\r\n}\r\n\r\n.stock-data {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 0;\r\n  font-weight: bold;\r\n}\r\n\r\n.index-item {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  font-size: large;\r\n  margin-bottom: 15px;\r\n  font-weight: bold;\r\n}\r\n\r\n.loading, .error {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n\r\n.text-red {\r\n  color: red;\r\n}\r\n\r\n.text-green {\r\n  color: green;\r\n}\r\n</style>"],"mappings":"AA2BA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MACA;MACAC,QAAA;QACA;QACA;QACA;QACA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,cAAA;IACA;IACA,KAAAC,QAAA,GAAAC,WAAA;MACA,KAAAF,cAAA;IACA;EACA;EACAG,cAAA;IACA,SAAAF,QAAA;MACAG,aAAA,MAAAH,QAAA;IACA;EACA;EACAI,OAAA;IACA;IACA,MAAAL,eAAA;MACA,KAAAM,OAAA;MACA,KAAAC,KAAA;MAEA;QACA;QACA,MAAAC,OAAA;QACA,MAAAC,QAAA,SAAAf,KAAA,CAAAgB,GAAA;UACAC,MAAA;YACAC,EAAA;YAAA;YACAC,CAAA;YAAA;YACAC,CAAA;YAAA;YACAC,IAAA;YAAA;YACAC,IAAA;YAAA;YACAC,GAAA;YAAA;YACAC,MAAA;YAAA;YACAC,MAAA,EAAAX,OAAA,CAAAY,IAAA;UACA;QACA;;QAEA;QACA,MAAAxB,IAAA,GAAAa,QAAA,CAAAb,IAAA,CAAAyB,OAAA,yBAAAA,OAAA;QACA,MAAAC,MAAA,GAAAC,IAAA,CAAAC,KAAA,CAAA5B,IAAA;QAEA,KAAA0B,MAAA,CAAA1B,IAAA,KAAA0B,MAAA,CAAA1B,IAAA,CAAA6B,IAAA;UACA,UAAAC,KAAA;QACA;QAEA,KAAA7B,SAAA,GAAAyB,MAAA,CAAA1B,IAAA,CAAA6B,IAAA,CAAAE,GAAA,CAAAC,IAAA;UACAjC,IAAA,OAAAkC,YAAA,CAAAD,IAAA,CAAAE,KAAA;UAAA;UACAC,KAAA,EAAAH,IAAA,CAAAI,EAAA,CAAAC,OAAA;UAAA;UACAC,MAAA,EAAAN,IAAA,CAAAO,EAAA,CAAAF,OAAA;UAAA;UACAG,aAAA,EAAAR,IAAA,CAAAS,EAAA,CAAAJ,OAAA;QACA;MAEA,SAAA1B,KAAA;QACA+B,OAAA,CAAA/B,KAAA,iBAAAA,KAAA;QACA,KAAAA,KAAA;MACA;QACA,KAAAD,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}